{"version":3,"sources":["components/Stopwatch/index.js","components/DurationExercise/index.js","components/RepetitionExercise/index.js","components/data/index.js","App.js","reportWebVitals.js","index.js"],"names":["Stopwatch","state","timerOn","timerStart","timerTime","startTimer","setState","Date","now","timer","setInterval","stopTimer","clearInterval","resetTimer","this","centiseconds","Math","floor","slice","seconds","minutes","hours","className","props","name","onClick","React","Component","DurationExercise","RepetitionExercise","value","prevState","addOne","reset","WorkoutData","data1","parseInt","document","getElementById","data2","data3","total","isNaN","Number","isInteger","console","log","innerHTML","type","id","sum","MENU","REPETITON_SCREEN","DURATION_SCREEN","DATA_SCREEN","MenuScreen","currentScreen","selectedItem","undefined","screen","class","objType","starttime","map","obj","index","App","login","status","loggedIn","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c7559738.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class Stopwatch extends React.Component {\n   state = {\n      timerOn: false,\n      timerStart: 0,\n      timerTime: 0\n   };\n\n   startTimer = () => {\n      this.setState({\n         timerOn: true,\n         timerTime: this.state.timerTime,\n         timerStart: Date.now() - this.state.timerTime\n      });\n      this.timer = setInterval(() => {\n         this.setState({\n            timerTime: Date.now() - this.state.timerStart\n         });\n      }, 10);\n   };\n\n   stopTimer = () => {\n      this.setState({ timerOn: false });\n      clearInterval(this.timer);\n   };\n\n   resetTimer = () => {\n      this.setState({\n         timerStart: 0,\n         timerTime: 0\n      });\n   };\n\n   render() {\n      const { timerTime } = this.state;\n      let centiseconds = (\"0\" + (Math.floor(timerTime / 10) % 100)).slice(-2);\n      let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\n      let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\n      let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n      return (\n         <>\n           <h1 className=\"title\">{this.props.name}</h1>\n            <div className=\"Stopwatch-display\">\n               {hours} : {minutes} : {seconds} : {centiseconds}\n            </div>\n            {this.state.timerOn === false && this.state.timerTime === 0 && (\n               <button className=\"button2button\" onClick={this.startTimer}>Start</button>\n            )}\n            {this.state.timerOn === true && (\n               <button className=\"button2button\" onClick={this.stopTimer}>Stop</button>\n            )}\n            {this.state.timerOn === false && this.state.timerTime > 0 && (\n               <button className=\"button2button\" onClick={this.startTimer}>Resume</button>\n            )}\n            {this.state.timerOn === false && this.state.timerTime > 0 && (\n               <button className=\"button2button\" onClick={this.resetTimer}>Reset</button>\n            )}\n         </>\n      );\n   }\n}\n","import React from \"react\";\nimport Stopwatch from \"../Stopwatch\" \n \nexport default class DurationExercise extends React.Component {\n   render() {\n      return <>\n         <h1 className=\"title\">{this.props.name}</h1>\n        \n        <Stopwatch></Stopwatch>\n   \n\n      \n       </>\n   }\n}","import React from \"react\"\n\n\n\nexport default class RepetitionExercise extends React.Component {\n   constructor(props) {\n      super(props)\n      this.state = { value: this.props.value }\n\n   }\n   addOne() {\n      this.setState((prevState) => ({\n         value: prevState.value + 1\n      }))\n   }\n   reset() {\n      this.setState ({\n         value: 0\n      })\n   }\n   render() {\n\n      return (\n         <>\n            <h1 className=\"title\">{this.props.name}</h1>\n\n            <p className=\"info\">Rep {this.state.value}</p>\n            <button className=\"buttonbutton\" onClick={() => this.addOne()}>Complete Rep</button>\n            <button className=\"buttonbutton\" onClick={() => this.reset()}>Reset</button>\n         </>\n      )\n   }\n}","import React from \"react\"\n\n\nexport default class WorkoutData extends React.Component {\n        sum(){\n        var data1 = parseInt(document.getElementById(\"in1\").value);\n        var data2 = parseInt(document.getElementById(\"in2\").value);\n         var data3 = parseInt(document.getElementById(\"in3\").value);\n        var total = data1 + data2 +data3;\n\n        if (isNaN(total)){\n            if(isNaN(data1) && Number.isInteger(data2)){console.log(\"First Empty\"); total = data2;}\n            if(isNaN(data2) && Number.isInteger(data1)){console.log(\"Second Empty\"); total = data1;}\n            if(isNaN(data3) && Number.isInteger(data1)){console.log(\"Third Empty\"); total = data1;}\n            if(isNaN(data1) && isNaN(data2)&& isNaN(data3)){console.log(\"Both Empty\"); total = 0;}\n            console.log(\" \");\n        }\n\n        document.getElementById(\"in4\").innerHTML = total;\n    }\n       \n   render() {\n\n      return (\n      <>\n         <h1 className=\"title\">Workout Data</h1>\n\n         <div className=\"app-cont\">\n             <p>Enter the amount of reps you completed for each excersise</p>\n\n\n                    <div className=\"data-cont\">\n\n                        <div className=\"indata\">\n                            <label>Push Ups</label>\n                            <input type=\"text\" name=\"perc\" id=\"in1\" className=\"in1\" />\n                        </div><br/>\n\n\n                        <div className=\"indata\">\n                            <label>Jumpping Jacks</label>\n                            <input type=\"text\" name=\"perc\" id=\"in2\" className=\"in1\" />\n                        </div><br/>\n\n                         <div className=\"indata\">\n                            <label>SitUps</label>\n                            <input type=\"text\" name=\"perc\" id=\"in3\" className=\"in1\" />\n                        </div><br/>\n\n\n                        <input className=\"button1\" type=\"submit\" onClick={() => this.sum()} value=\"Total Reps\"></input><br/><br/>\n\n\n                        <div className=\"indata\">\n                            <label></label>\n                            <div id=\"in4\" className=\"answ1\"></div>\n                        </div><br/>\n\n                    </div>\n                    </div>\n\n      \n       </>\n       )\n   }\n}","import React from \"react\"\nimport DurationExercise from \"./components/DurationExercise\"\nimport RepetitionExercise from \"./components/RepetitionExercise\"\nimport WorkoutData from \"./components/data\"\n\nimport './App.css'\n\n\n\nconst MENU = \"menu\"\nconst REPETITON_SCREEN = \"repetition_screen\"\nconst DURATION_SCREEN = \"druation_screen\"\nconst DATA_SCREEN = \"data_screen\"\n\n\n//Menu \nclass MenuScreen extends React.Component {\n   constructor(props){\n      super(props)\n      this.state = { currentScreen: MENU, selectedItem: undefined}\n   }\n   render() {//list\n      let objects=[\n         { objType: \"duration\", name: \"Swimming\", value: 0 },\n         {objType: \"repetiton\", name: \"Push Ups\", value: 0},\n         { objType: \"duration\", name: \"Biking\", starttime: \"00:00:00\"},\n         { objType: \"repetiton\", name: \"Jumpping Jacks\", value: 0 },\n         { objType: \"duration\", name: \"Running\", starttime: \"00:00:00\" },\n         { objType: \"repetiton\", name: \"Situps\", value: 0 },\n        \n      ]\n\n      let screen \n      switch(this.state.currentScreen){\n         case MENU:\n            screen= (\n\n               <>\n               \n               <div class=\"container\">\n                  <h2 className=\"menuheader\">Go Do Something</h2>\n                  <ul className=\"unordered-list\">\n                     {objects.map((obj, index) =>\n                           <li key={index} className=\"list-item\">\n                              <button className=\"menubutton\"\n                              onClick={() => \n                                 this.setState({ \n                                    currentScreen: obj.objType === \"repetiton\" ?REPETITON_SCREEN : DURATION_SCREEN,\n                                   \n                                    selectedItem: obj,\n                                 })\n                                 }\n                                 >\n                                    {obj.name}\n                                    </button>\n                           </li>\n                     )}\n                     </ul>\n                     \n                     <button className=\"databutton\" onClick={() =>\n                     this.setState({currentScreen: DATA_SCREEN\n                     }\n\n                     )\n                    }\n                    >\n                      Workout Data\n                    </button>\n                   \n                     </div>\n                     \n                 \n               </>\n         //if button is clicked Login is false which means you go to the login page\n      )\n      break\n      case REPETITON_SCREEN:\n         screen = \n         (\n         <>\n          <div class=\"container\">\n           \n          <RepetitionExercise {...this.state.selectedItem}></RepetitionExercise>\n          \n          <button className=\"buttonbutton\" onClick={ () => this.setState({currentScreen:MENU})}>Back\n          </button>\n          </div>\n          </>\n          )\n            break\n      case DURATION_SCREEN:\n         screen =\n         (\n            <>\n            <div class=\"container\">\n              \n               <DurationExercise {...this.state.selectedItem}></DurationExercise>\n               \n               <button className=\"button2button\" onClick={() => this.setState({currentScreen: MENU})}>Back\n               </button>\n               </div>\n             </>\n         )\n         break\ncase DATA_SCREEN:\n         screen =\n         (\n            <>\n            <div class=\"container\">\n              \n               <WorkoutData {...this.state.selectedItem}></WorkoutData>\n               \n               <button className=\"button2button\" onClick={() => this.setState({currentScreen: MENU})}>Back\n               </button>\n               </div>\n             </>\n         )\n         break\n\n        }\n      return screen\n         //output\n        \n   }\n}\n\n\nexport default class App extends React.Component {\n   constructor(props) {\n      super(props)\n      this.state = { loggedIn: true }\n   }\n\n   //login method\n   login = (status) => {\n      this.setState({loggedIn:status})\n   }\n   render() {\n      let screen;\n      if (this.state.loggedIn){\n         screen = (\n            <MenuScreen login={this.login}></MenuScreen>\n         )\n      \n      }\n      return screen\n      //return <MenuScreen></MenuScreen>\n   }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}