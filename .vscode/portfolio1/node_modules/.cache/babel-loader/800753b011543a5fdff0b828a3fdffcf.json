{"ast":null,"code":"var _jsxFileName = \"/Users/ellery/Documents/GitHub/portfolio/.vscode/portfolio1/src/Stopwatch/index.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Stopwatch extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      timerOn: false,\n      timerStart: 0,\n      timerTime: 0\n    };\n\n    this.startTimer = () => {\n      this.setState({\n        timerOn: true,\n        timerTime: this.state.timerTime,\n        timerStart: Date.now() - this.state.timerTime\n      });\n      this.timer = setInterval(() => {\n        this.setState({\n          timerTime: Date.now() - this.state.timerStart\n        });\n      }, 10);\n    };\n\n    this.stopTimer = () => {\n      this.setState({\n        timerOn: false\n      });\n      clearInterval(this.timer);\n    };\n\n    this.resetTimer = () => {\n      this.setState({\n        timerStart: 0,\n        timerTime: 0\n      });\n    };\n  }\n\n  render() {\n    const {\n      timerTime\n    } = this.state;\n    let centiseconds = (\"0\" + Math.floor(timerTime / 10) % 100).slice(-2);\n    let seconds = (\"0\" + Math.floor(timerTime / 1000) % 60).slice(-2);\n    let minutes = (\"0\" + Math.floor(timerTime / 60000) % 60).slice(-2);\n    let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: this.props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Stopwatch-display\",\n        children: [hours, \" : \", minutes, \" : \", seconds, \" : \", centiseconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), this.state.timerOn === false && this.state.timerTime === 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button2button\",\n        onClick: this.startTimer,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 16\n      }, this), this.state.timerOn === true && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button2button\",\n        onClick: this.stopTimer,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }, this), this.state.timerOn === false && this.state.timerTime > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button2button\",\n        onClick: this.startTimer,\n        children: \"Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 16\n      }, this), this.state.timerOn === false && this.state.timerTime > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button2button\",\n        onClick: this.resetTimer,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/ellery/Documents/GitHub/portfolio/.vscode/portfolio1/src/Stopwatch/index.js"],"names":["React","Stopwatch","Component","state","timerOn","timerStart","timerTime","startTimer","setState","Date","now","timer","setInterval","stopTimer","clearInterval","resetTimer","render","centiseconds","Math","floor","slice","seconds","minutes","hours","props","name"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nexport default class Stopwatch extends React.Component {\n   state = {\n      timerOn: false,\n      timerStart: 0,\n      timerTime: 0\n   };\n\n   startTimer = () => {\n      this.setState({\n         timerOn: true,\n         timerTime: this.state.timerTime,\n         timerStart: Date.now() - this.state.timerTime\n      });\n      this.timer = setInterval(() => {\n         this.setState({\n            timerTime: Date.now() - this.state.timerStart\n         });\n      }, 10);\n   };\n\n   stopTimer = () => {\n      this.setState({ timerOn: false });\n      clearInterval(this.timer);\n   };\n\n   resetTimer = () => {\n      this.setState({\n         timerStart: 0,\n         timerTime: 0\n      });\n   };\n\n   render() {\n      const { timerTime } = this.state;\n      let centiseconds = (\"0\" + (Math.floor(timerTime / 10) % 100)).slice(-2);\n      let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\n      let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\n      let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n      return (\n         <>\n           <h1 className=\"title\">{this.props.name}</h1>\n            <div className=\"Stopwatch-display\">\n               {hours} : {minutes} : {seconds} : {centiseconds}\n            </div>\n            {this.state.timerOn === false && this.state.timerTime === 0 && (\n               <button className=\"button2button\" onClick={this.startTimer}>Start</button>\n            )}\n            {this.state.timerOn === true && (\n               <button className=\"button2button\" onClick={this.stopTimer}>Stop</button>\n            )}\n            {this.state.timerOn === false && this.state.timerTime > 0 && (\n               <button className=\"button2button\" onClick={this.startTimer}>Resume</button>\n            )}\n            {this.state.timerOn === false && this.state.timerTime > 0 && (\n               <button className=\"button2button\" onClick={this.resetTimer}>Reset</button>\n            )}\n         </>\n      );\n   }\n}\n"]},"metadata":{},"sourceType":"module"}